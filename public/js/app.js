"use strict";
var register = {};
register.model = {
  teamOne: m.prop(''),
  teamTwo: m.prop(''),
  teamOneScore: m.prop(''),
  teamTwoScore: m.prop('')
};
register.controller = (function() {
  var update = (function(e) {
    e.preventDefault();
    var data = {
      teams: [register.model.teamOne(), register.model.teamTwo()],
      score: [register.model.teamOneScore(), register.model.teamTwoScore()]
    };
    m.request({
      method: 'POST',
      url: 'http://localhost:8001/api/register',
      data: data
    }).then((function() {
      console.log('got a response');
    }));
  });
  return {update: update};
});
register.view = (function(ctrl) {
  return [m('h1', {class: 'heading1'}, 'Register result'), m('form', [m('input', {
    value: register.model.teamOne(),
    onchange: m.withAttr('value', register.model.teamOne),
    class: 'inputTeamName',
    placeholder: 'Team One'
  }), m('h2', {class: ['heading2__lessVSpace']}, 'vs.'), m('input', {
    value: register.model.teamTwo(),
    onchange: m.withAttr('value', register.model.teamTwo),
    class: 'inputTeamName',
    placeholder: 'Team Two'
  }), m('div', {class: 'teamScore-container'}, [m('h2', {class: 'heading2__lessVSpace'}, 'Result'), m('input', {
    value: register.model.teamOneScore(),
    onchange: m.withAttr('value', register.model.teamOneScore),
    class: 'teamScore',
    placeholder: 'Team One'
  }), m('div', {class: 'teamScore-divider'}), m('input', {
    value: register.model.teamTwoScore(),
    onchange: m.withAttr('value', register.model.teamTwoScore),
    class: 'teamScore',
    placeholder: 'Team Two'
  }), m('button', {
    class: 'submitButton-register',
    onclick: ctrl.update
  }, 'Register')])])];
});
m.module(document.getElementById('app'), register);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlcyI6WyJhcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxBQUFJLEVBQUEsQ0FBQSxRQUFPLEVBQUksR0FBQyxDQUFDO0FBRWpCLE9BQU8sTUFBTSxFQUFJO0FBQ2IsUUFBTSxDQUFHLENBQUEsQ0FBQSxLQUFLLEFBQUMsQ0FBQyxFQUFDLENBQUM7QUFDbEIsUUFBTSxDQUFHLENBQUEsQ0FBQSxLQUFLLEFBQUMsQ0FBQyxFQUFDLENBQUM7QUFDbEIsYUFBVyxDQUFHLENBQUEsQ0FBQSxLQUFLLEFBQUMsQ0FBQyxFQUFDLENBQUM7QUFDdkIsYUFBVyxDQUFHLENBQUEsQ0FBQSxLQUFLLEFBQUMsQ0FBQyxFQUFDLENBQUM7QUFBQSxBQUMzQixDQUFBO0FBRUEsT0FBTyxXQUFXLElBQUksU0FBQSxBQUFDO0FBQ3JCLEFBQUksSUFBQSxDQUFBLE1BQUssSUFBSSxTQUFDLENBQUE7QUFDWixJQUFBLGVBQWUsQUFBQyxFQUFDLENBQUM7QUFDbEIsQUFBSSxNQUFBLENBQUEsSUFBRyxFQUFJO0FBQ1QsVUFBSSxDQUFHLEVBQUMsUUFBTyxNQUFNLFFBQVEsQUFBQyxFQUFDLENBQUcsQ0FBQSxRQUFPLE1BQU0sUUFBUSxBQUFDLEVBQUMsQ0FBQztBQUMxRCxVQUFJLENBQUcsRUFBQyxRQUFPLE1BQU0sYUFBYSxBQUFDLEVBQUMsQ0FBRyxDQUFBLFFBQU8sTUFBTSxhQUFhLEFBQUMsRUFBQyxDQUFDO0FBQUEsSUFDdEUsQ0FBQTtBQUNBLElBQUEsUUFBUSxBQUFDLENBQUM7QUFBRSxXQUFLLENBQUcsT0FBSztBQUFHLFFBQUUsQ0FBRyxxQ0FBbUM7QUFBRyxTQUFHLENBQUcsS0FBRztBQUFBLElBQUMsQ0FBQyxLQUM1RSxBQUFDLEVBQUMsU0FBQSxBQUFDLENBQUk7QUFDVCxZQUFNLElBQUksQUFBQyxDQUFDLGdCQUFlLENBQUMsQ0FBQTtJQUM5QixFQUFDLENBQUM7RUFDTixDQUFBLENBQUM7QUFFRCxPQUFPLEVBQ0wsTUFBSyxDQUFHLE9BQUssQ0FDZixDQUFBO0FBQ0YsQ0FBQSxDQUFDO0FBRUQsT0FBTyxLQUFLLElBQUksU0FBQyxJQUFHLENBQU07QUFDeEIsT0FBTyxFQUNMLENBQUEsQUFBQyxDQUFDLElBQUcsQ0FBRyxFQUFFLEtBQUksQ0FBRyxXQUFTLENBQUUsQ0FBRyxrQkFBZ0IsQ0FBQyxDQUNoRCxDQUFBLENBQUEsQUFBQyxDQUFDLE1BQUssQ0FBRyxFQUNSLENBQUEsQUFBQyxDQUFDLE9BQU0sQ0FBRztBQUNULFFBQUksQ0FBRyxDQUFBLFFBQU8sTUFBTSxRQUFRLEFBQUMsRUFBQztBQUM5QixXQUFPLENBQUcsQ0FBQSxDQUFBLFNBQVMsQUFBQyxDQUFDLE9BQU0sQ0FBRyxDQUFBLFFBQU8sTUFBTSxRQUFRLENBQUM7QUFDcEQsUUFBSSxDQUFHLGdCQUFjO0FBQ3JCLGNBQVUsQ0FBRyxXQUFTO0FBQUEsRUFDeEIsQ0FBQyxDQUNELENBQUEsQ0FBQSxBQUFDLENBQUMsSUFBRyxDQUFHLEVBQUUsS0FBSSxDQUFHLEVBQUMsc0JBQXFCLENBQUMsQ0FBRSxDQUFHLE1BQUksQ0FBQyxDQUNsRCxDQUFBLENBQUEsQUFBQyxDQUFDLE9BQU0sQ0FBRztBQUNULFFBQUksQ0FBRyxDQUFBLFFBQU8sTUFBTSxRQUFRLEFBQUMsRUFBQztBQUM5QixXQUFPLENBQUcsQ0FBQSxDQUFBLFNBQVMsQUFBQyxDQUFDLE9BQU0sQ0FBRyxDQUFBLFFBQU8sTUFBTSxRQUFRLENBQUM7QUFDcEQsUUFBSSxDQUFHLGdCQUFjO0FBQ3JCLGNBQVUsQ0FBRyxXQUFTO0FBQUEsRUFDeEIsQ0FBQyxDQUNELENBQUEsQ0FBQSxBQUFDLENBQUMsS0FBSSxDQUFHLEVBQUUsS0FBSSxDQUFHLHNCQUFvQixDQUFFLENBQUcsRUFDekMsQ0FBQSxBQUFDLENBQUMsSUFBRyxDQUFHLEVBQUUsS0FBSSxDQUFHLHVCQUFxQixDQUFFLENBQUksU0FBTyxDQUFDLENBQ3BELENBQUEsQ0FBQSxBQUFDLENBQUMsT0FBTSxDQUFHO0FBQ1QsUUFBSSxDQUFHLENBQUEsUUFBTyxNQUFNLGFBQWEsQUFBQyxFQUFDO0FBQ25DLFdBQU8sQ0FBRyxDQUFBLENBQUEsU0FBUyxBQUFDLENBQUMsT0FBTSxDQUFHLENBQUEsUUFBTyxNQUFNLGFBQWEsQ0FBQztBQUN6RCxRQUFJLENBQUcsWUFBVTtBQUNqQixjQUFVLENBQUcsV0FBUztBQUFBLEVBQ3hCLENBQUMsQ0FDRCxDQUFBLENBQUEsQUFBQyxDQUFDLEtBQUksQ0FBRyxFQUFFLEtBQUksQ0FBRyxvQkFBa0IsQ0FBRSxDQUFDLENBQ3ZDLENBQUEsQ0FBQSxBQUFDLENBQUMsT0FBTSxDQUFHO0FBQ1QsUUFBSSxDQUFHLENBQUEsUUFBTyxNQUFNLGFBQWEsQUFBQyxFQUFDO0FBQ25DLFdBQU8sQ0FBRyxDQUFBLENBQUEsU0FBUyxBQUFDLENBQUMsT0FBTSxDQUFHLENBQUEsUUFBTyxNQUFNLGFBQWEsQ0FBQztBQUN6RCxRQUFJLENBQUcsWUFBVTtBQUNqQixjQUFVLENBQUcsV0FBUztBQUFBLEVBQ3hCLENBQUMsQ0FDRCxDQUFBLENBQUEsQUFBQyxDQUFDLFFBQU8sQ0FBRztBQUFFLFFBQUksQ0FBRyx3QkFBc0I7QUFBRyxVQUFNLENBQUcsQ0FBQSxJQUFHLE9BQU87QUFBQSxFQUFDLENBQUcsV0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDekYsQ0FBQTtBQUNGLENBQUEsQ0FBQztBQUVELE9BQU8sQUFBQyxDQUFDLFFBQU8sZUFBZSxBQUFDLENBQUMsS0FBSSxDQUFDLENBQUcsU0FBTyxDQUFDLENBQUM7QUFDbEQiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVnaXN0ZXIgPSB7fTtcblxucmVnaXN0ZXIubW9kZWwgPSB7XG4gICAgdGVhbU9uZTogbS5wcm9wKCcnKSxcbiAgICB0ZWFtVHdvOiBtLnByb3AoJycpLFxuICAgIHRlYW1PbmVTY29yZTogbS5wcm9wKCcnKSxcbiAgICB0ZWFtVHdvU2NvcmU6IG0ucHJvcCgnJylcbn1cblxucmVnaXN0ZXIuY29udHJvbGxlciA9ICgpID0+IHtcbiAgdmFyIHVwZGF0ZSA9IChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgdGVhbXM6IFtyZWdpc3Rlci5tb2RlbC50ZWFtT25lKCksIHJlZ2lzdGVyLm1vZGVsLnRlYW1Ud28oKV0sXG4gICAgICBzY29yZTogW3JlZ2lzdGVyLm1vZGVsLnRlYW1PbmVTY29yZSgpLCByZWdpc3Rlci5tb2RlbC50ZWFtVHdvU2NvcmUoKV1cbiAgICB9XG4gICAgbS5yZXF1ZXN0KHsgbWV0aG9kOiAnUE9TVCcsIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMS9hcGkvcmVnaXN0ZXInLCBkYXRhOiBkYXRhfSlcbiAgICAgIC50aGVuKCgpID0+e1xuICAgICAgICBjb25zb2xlLmxvZygnZ290IGEgcmVzcG9uc2UnKVxuICAgICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IHVwZGF0ZVxuICB9XG59O1xuXG5yZWdpc3Rlci52aWV3ID0gKGN0cmwpID0+IHtcbiAgcmV0dXJuIFtcbiAgICBtKCdoMScsIHsgY2xhc3M6ICdoZWFkaW5nMScgfSwgJ1JlZ2lzdGVyIHJlc3VsdCcpLFxuICAgIG0oJ2Zvcm0nLCBbXG4gICAgICBtKCdpbnB1dCcsIHtcbiAgICAgICAgdmFsdWU6IHJlZ2lzdGVyLm1vZGVsLnRlYW1PbmUoKSxcbiAgICAgICAgb25jaGFuZ2U6IG0ud2l0aEF0dHIoJ3ZhbHVlJywgcmVnaXN0ZXIubW9kZWwudGVhbU9uZSksXG4gICAgICAgIGNsYXNzOiAnaW5wdXRUZWFtTmFtZScsXG4gICAgICAgIHBsYWNlaG9sZGVyOiAnVGVhbSBPbmUnXG4gICAgICB9KSxcbiAgICAgIG0oJ2gyJywgeyBjbGFzczogWydoZWFkaW5nMl9fbGVzc1ZTcGFjZSddIH0sICd2cy4nKSxcbiAgICAgIG0oJ2lucHV0Jywge1xuICAgICAgICB2YWx1ZTogcmVnaXN0ZXIubW9kZWwudGVhbVR3bygpLFxuICAgICAgICBvbmNoYW5nZTogbS53aXRoQXR0cigndmFsdWUnLCByZWdpc3Rlci5tb2RlbC50ZWFtVHdvKSxcbiAgICAgICAgY2xhc3M6ICdpbnB1dFRlYW1OYW1lJyxcbiAgICAgICAgcGxhY2Vob2xkZXI6ICdUZWFtIFR3bydcbiAgICAgIH0pLFxuICAgICAgbSgnZGl2JywgeyBjbGFzczogJ3RlYW1TY29yZS1jb250YWluZXInIH0sIFtcbiAgICAgICAgbSgnaDInLCB7IGNsYXNzOiAnaGVhZGluZzJfX2xlc3NWU3BhY2UnIH0sICAnUmVzdWx0JyksXG4gICAgICAgIG0oJ2lucHV0Jywge1xuICAgICAgICAgIHZhbHVlOiByZWdpc3Rlci5tb2RlbC50ZWFtT25lU2NvcmUoKSxcbiAgICAgICAgICBvbmNoYW5nZTogbS53aXRoQXR0cigndmFsdWUnLCByZWdpc3Rlci5tb2RlbC50ZWFtT25lU2NvcmUpLFxuICAgICAgICAgIGNsYXNzOiAndGVhbVNjb3JlJyxcbiAgICAgICAgICBwbGFjZWhvbGRlcjogJ1RlYW0gT25lJ1xuICAgICAgICB9KSxcbiAgICAgICAgbSgnZGl2JywgeyBjbGFzczogJ3RlYW1TY29yZS1kaXZpZGVyJyB9KSxcbiAgICAgICAgbSgnaW5wdXQnLCB7XG4gICAgICAgICAgdmFsdWU6IHJlZ2lzdGVyLm1vZGVsLnRlYW1Ud29TY29yZSgpLFxuICAgICAgICAgIG9uY2hhbmdlOiBtLndpdGhBdHRyKCd2YWx1ZScsIHJlZ2lzdGVyLm1vZGVsLnRlYW1Ud29TY29yZSksXG4gICAgICAgICAgY2xhc3M6ICd0ZWFtU2NvcmUnLFxuICAgICAgICAgIHBsYWNlaG9sZGVyOiAnVGVhbSBUd28nXG4gICAgICAgIH0pLFxuICAgICAgICBtKCdidXR0b24nLCB7IGNsYXNzOiAnc3VibWl0QnV0dG9uLXJlZ2lzdGVyJywgb25jbGljazogY3RybC51cGRhdGV9ICwnUmVnaXN0ZXInKV0pXSlcbiAgXVxufTtcblxubS5tb2R1bGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpLCByZWdpc3Rlcik7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=